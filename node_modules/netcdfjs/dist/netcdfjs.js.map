{"version":3,"sources":["webpack://netcdfjs/webpack/universalModuleDefinition","webpack://netcdfjs/webpack/bootstrap","webpack://netcdfjs/./src/utils.js","webpack://netcdfjs/./node_modules/utf8/utf8.js","webpack://netcdfjs/./src/types.js","webpack://netcdfjs/./src/index.js","webpack://netcdfjs/../src/IOBuffer.ts","webpack://netcdfjs/./src/data.js","webpack://netcdfjs/./src/header.js","webpack://netcdfjs/./src/toString.js"],"names":["notNetcdf","statement","reason","TypeError","padding","buffer","offset","skip","readName","nameLength","readUint32","name","readChars","module","exports","root","stringFromCharCode","String","fromCharCode","ucs2decode","string","output","counter","length","value","extra","charCodeAt","push","ucs2encode","array","index","checkScalarValue","codePoint","Error","toString","toUpperCase","createByte","shift","encodeCodePoint","symbol","utf8encode","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","utf8decode","tmp","version","encode","decode","require","types","BYTE","CHAR","SHORT","INT","FLOAT","DOUBLE","num2str","type","Number","num2bytes","str2num","readNumber","size","bufferReader","numbers","Array","i","readType","readBytes","trimNull","readInt16","bind","readInt32","readFloat32","readFloat64","undefined","substring","IOBuffer","utils","data","readHeader","NetCDFReader","constructor","setBigEndian","readByte","header","recordDimension","dimensions","globalAttributes","getAttribute","attributeName","attribute","find","val","getDataVariableAsString","variableName","variable","getDataVariable","join","variables","call","seek","record","nonRecord","dataVariableExists","attributeExists","width","step","recordStep","currentOffset","ZERO","NC_DIMENSION","NC_VARIABLE","NC_ATTRIBUTE","dimList","dimensionsList","id","recordId","recordName","attributesList","variablesList","NC_UNLIMITED","dimensionSize","dim","gAttList","attributeSize","attributes","gAtt","varList","variableSize","v","dimensionality","dimensionsIds","varSize","result","dimension","padEnd","JSON","parse","stringify","isNaN"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFa;AAEb;;;;;;;AAMA,SAASA,SAAT,CAAmBC,SAAnB,EAA8BC,MAA9B,EAAsC;AACpC,MAAID,SAAJ,EAAe;AACb,UAAM,IAAIE,SAAJ,yCAA+CD,MAA/C,EAAN;AACD;AACF;AAED;;;;;;;AAKA,SAASE,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,MAAKA,MAAM,CAACC,MAAP,GAAgB,CAAjB,KAAwB,CAA5B,EAA+B;AAC7BD,UAAM,CAACE,IAAP,CAAY,IAAKF,MAAM,CAACC,MAAP,GAAgB,CAAjC;AACD;AACF;AAGD;;;;;;;;AAMA,SAASE,QAAT,CAAkBH,MAAlB,EAA0B;AACxB;AACA,MAAII,UAAU,GAAGJ,MAAM,CAACK,UAAP,EAAjB;AACA,MAAIC,IAAI,GAAGN,MAAM,CAACO,SAAP,CAAiBH,UAAjB,CAAX,CAHwB,CAKxB;AACA;AAEA;;AACAL,SAAO,CAACC,MAAD,CAAP;AACA,SAAOM,IAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,CAAed,SAAf,GAA2BA,SAA3B;AACAa,MAAM,CAACC,OAAP,CAAeV,OAAf,GAAyBA,OAAzB;AACAS,MAAM,CAACC,OAAP,CAAeN,QAAf,GAA0BA,QAA1B,C;;;;;;AC/CA;AACA;;AAAE,WAASO,IAAT,EAAe;AAEhB,MAAIC,kBAAkB,GAAGC,MAAM,CAACC,YAAhC,CAFgB,CAIhB;;AACA,WAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC3B,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,MAAM,GAAGH,MAAM,CAACG,MAApB;AACA,QAAIC,KAAJ;AACA,QAAIC,KAAJ;;AACA,WAAOH,OAAO,GAAGC,MAAjB,EAAyB;AACxBC,WAAK,GAAGJ,MAAM,CAACM,UAAP,CAAkBJ,OAAO,EAAzB,CAAR;;AACA,UAAIE,KAAK,IAAI,MAAT,IAAmBA,KAAK,IAAI,MAA5B,IAAsCF,OAAO,GAAGC,MAApD,EAA4D;AAC3D;AACAE,aAAK,GAAGL,MAAM,CAACM,UAAP,CAAkBJ,OAAO,EAAzB,CAAR;;AACA,YAAI,CAACG,KAAK,GAAG,MAAT,KAAoB,MAAxB,EAAgC;AAAE;AACjCJ,gBAAM,CAACM,IAAP,CAAY,CAAC,CAACH,KAAK,GAAG,KAAT,KAAmB,EAApB,KAA2BC,KAAK,GAAG,KAAnC,IAA4C,OAAxD;AACA,SAFD,MAEO;AACN;AACA;AACAJ,gBAAM,CAACM,IAAP,CAAYH,KAAZ;AACAF,iBAAO;AACP;AACD,OAXD,MAWO;AACND,cAAM,CAACM,IAAP,CAAYH,KAAZ;AACA;AACD;;AACD,WAAOH,MAAP;AACA,GA7Be,CA+BhB;;;AACA,WAASO,UAAT,CAAoBC,KAApB,EAA2B;AAC1B,QAAIN,MAAM,GAAGM,KAAK,CAACN,MAAnB;AACA,QAAIO,KAAK,GAAG,CAAC,CAAb;AACA,QAAIN,KAAJ;AACA,QAAIH,MAAM,GAAG,EAAb;;AACA,WAAO,EAAES,KAAF,GAAUP,MAAjB,EAAyB;AACxBC,WAAK,GAAGK,KAAK,CAACC,KAAD,CAAb;;AACA,UAAIN,KAAK,GAAG,MAAZ,EAAoB;AACnBA,aAAK,IAAI,OAAT;AACAH,cAAM,IAAIL,kBAAkB,CAACQ,KAAK,KAAK,EAAV,GAAe,KAAf,GAAuB,MAAxB,CAA5B;AACAA,aAAK,GAAG,SAASA,KAAK,GAAG,KAAzB;AACA;;AACDH,YAAM,IAAIL,kBAAkB,CAACQ,KAAD,CAA5B;AACA;;AACD,WAAOH,MAAP;AACA;;AAED,WAASU,gBAAT,CAA0BC,SAA1B,EAAqC;AACpC,QAAIA,SAAS,IAAI,MAAb,IAAuBA,SAAS,IAAI,MAAxC,EAAgD;AAC/C,YAAMC,KAAK,CACV,sBAAsBD,SAAS,CAACE,QAAV,CAAmB,EAAnB,EAAuBC,WAAvB,EAAtB,GACA,wBAFU,CAAX;AAIA;AACD;AACD;;;AAEA,WAASC,UAAT,CAAoBJ,SAApB,EAA+BK,KAA/B,EAAsC;AACrC,WAAOrB,kBAAkB,CAAGgB,SAAS,IAAIK,KAAd,GAAuB,IAAxB,GAAgC,IAAjC,CAAzB;AACA;;AAED,WAASC,eAAT,CAAyBN,SAAzB,EAAoC;AACnC,QAAI,CAACA,SAAS,GAAG,UAAb,KAA4B,CAAhC,EAAmC;AAAE;AACpC,aAAOhB,kBAAkB,CAACgB,SAAD,CAAzB;AACA;;AACD,QAAIO,MAAM,GAAG,EAAb;;AACA,QAAI,CAACP,SAAS,GAAG,UAAb,KAA4B,CAAhC,EAAmC;AAAE;AACpCO,YAAM,GAAGvB,kBAAkB,CAAGgB,SAAS,IAAI,CAAd,GAAmB,IAApB,GAA4B,IAA7B,CAA3B;AACA,KAFD,MAGK,IAAI,CAACA,SAAS,GAAG,UAAb,KAA4B,CAAhC,EAAmC;AAAE;AACzCD,sBAAgB,CAACC,SAAD,CAAhB;AACAO,YAAM,GAAGvB,kBAAkB,CAAGgB,SAAS,IAAI,EAAd,GAAoB,IAArB,GAA6B,IAA9B,CAA3B;AACAO,YAAM,IAAIH,UAAU,CAACJ,SAAD,EAAY,CAAZ,CAApB;AACA,KAJI,MAKA,IAAI,CAACA,SAAS,GAAG,UAAb,KAA4B,CAAhC,EAAmC;AAAE;AACzCO,YAAM,GAAGvB,kBAAkB,CAAGgB,SAAS,IAAI,EAAd,GAAoB,IAArB,GAA6B,IAA9B,CAA3B;AACAO,YAAM,IAAIH,UAAU,CAACJ,SAAD,EAAY,EAAZ,CAApB;AACAO,YAAM,IAAIH,UAAU,CAACJ,SAAD,EAAY,CAAZ,CAApB;AACA;;AACDO,UAAM,IAAIvB,kBAAkB,CAAEgB,SAAS,GAAG,IAAb,GAAqB,IAAtB,CAA5B;AACA,WAAOO,MAAP;AACA;;AAED,WAASC,UAAT,CAAoBpB,MAApB,EAA4B;AAC3B,QAAIqB,UAAU,GAAGtB,UAAU,CAACC,MAAD,CAA3B;AACA,QAAIG,MAAM,GAAGkB,UAAU,CAAClB,MAAxB;AACA,QAAIO,KAAK,GAAG,CAAC,CAAb;AACA,QAAIE,SAAJ;AACA,QAAIU,UAAU,GAAG,EAAjB;;AACA,WAAO,EAAEZ,KAAF,GAAUP,MAAjB,EAAyB;AACxBS,eAAS,GAAGS,UAAU,CAACX,KAAD,CAAtB;AACAY,gBAAU,IAAIJ,eAAe,CAACN,SAAD,CAA7B;AACA;;AACD,WAAOU,UAAP;AACA;AAED;;;AAEA,WAASC,oBAAT,GAAgC;AAC/B,QAAIC,SAAS,IAAIC,SAAjB,EAA4B;AAC3B,YAAMZ,KAAK,CAAC,oBAAD,CAAX;AACA;;AAED,QAAIa,gBAAgB,GAAGC,SAAS,CAACH,SAAD,CAAT,GAAuB,IAA9C;AACAA,aAAS;;AAET,QAAI,CAACE,gBAAgB,GAAG,IAApB,KAA6B,IAAjC,EAAuC;AACtC,aAAOA,gBAAgB,GAAG,IAA1B;AACA,KAV8B,CAY/B;;;AACA,UAAMb,KAAK,CAAC,2BAAD,CAAX;AACA;;AAED,WAASe,YAAT,GAAwB;AACvB,QAAIC,KAAJ;AACA,QAAIC,KAAJ;AACA,QAAIC,KAAJ;AACA,QAAIC,KAAJ;AACA,QAAIpB,SAAJ;;AAEA,QAAIY,SAAS,GAAGC,SAAhB,EAA2B;AAC1B,YAAMZ,KAAK,CAAC,oBAAD,CAAX;AACA;;AAED,QAAIW,SAAS,IAAIC,SAAjB,EAA4B;AAC3B,aAAO,KAAP;AACA,KAbsB,CAevB;;;AACAI,SAAK,GAAGF,SAAS,CAACH,SAAD,CAAT,GAAuB,IAA/B;AACAA,aAAS,GAjBc,CAmBvB;;AACA,QAAI,CAACK,KAAK,GAAG,IAAT,KAAkB,CAAtB,EAAyB;AACxB,aAAOA,KAAP;AACA,KAtBsB,CAwBvB;;;AACA,QAAI,CAACA,KAAK,GAAG,IAAT,KAAkB,IAAtB,EAA4B;AAC3BC,WAAK,GAAGP,oBAAoB,EAA5B;AACAX,eAAS,GAAI,CAACiB,KAAK,GAAG,IAAT,KAAkB,CAAnB,GAAwBC,KAApC;;AACA,UAAIlB,SAAS,IAAI,IAAjB,EAAuB;AACtB,eAAOA,SAAP;AACA,OAFD,MAEO;AACN,cAAMC,KAAK,CAAC,2BAAD,CAAX;AACA;AACD,KAjCsB,CAmCvB;;;AACA,QAAI,CAACgB,KAAK,GAAG,IAAT,KAAkB,IAAtB,EAA4B;AAC3BC,WAAK,GAAGP,oBAAoB,EAA5B;AACAQ,WAAK,GAAGR,oBAAoB,EAA5B;AACAX,eAAS,GAAI,CAACiB,KAAK,GAAG,IAAT,KAAkB,EAAnB,GAA0BC,KAAK,IAAI,CAAnC,GAAwCC,KAApD;;AACA,UAAInB,SAAS,IAAI,MAAjB,EAAyB;AACxBD,wBAAgB,CAACC,SAAD,CAAhB;AACA,eAAOA,SAAP;AACA,OAHD,MAGO;AACN,cAAMC,KAAK,CAAC,2BAAD,CAAX;AACA;AACD,KA9CsB,CAgDvB;;;AACA,QAAI,CAACgB,KAAK,GAAG,IAAT,KAAkB,IAAtB,EAA4B;AAC3BC,WAAK,GAAGP,oBAAoB,EAA5B;AACAQ,WAAK,GAAGR,oBAAoB,EAA5B;AACAS,WAAK,GAAGT,oBAAoB,EAA5B;AACAX,eAAS,GAAI,CAACiB,KAAK,GAAG,IAAT,KAAkB,IAAnB,GAA4BC,KAAK,IAAI,IAArC,GACVC,KAAK,IAAI,IADC,GACOC,KADnB;;AAEA,UAAIpB,SAAS,IAAI,QAAb,IAAyBA,SAAS,IAAI,QAA1C,EAAoD;AACnD,eAAOA,SAAP;AACA;AACD;;AAED,UAAMC,KAAK,CAAC,wBAAD,CAAX;AACA;;AAED,MAAIc,SAAJ;AACA,MAAIF,SAAJ;AACA,MAAID,SAAJ;;AACA,WAASS,UAAT,CAAoBX,UAApB,EAAgC;AAC/BK,aAAS,GAAG5B,UAAU,CAACuB,UAAD,CAAtB;AACAG,aAAS,GAAGE,SAAS,CAACxB,MAAtB;AACAqB,aAAS,GAAG,CAAZ;AACA,QAAIH,UAAU,GAAG,EAAjB;AACA,QAAIa,GAAJ;;AACA,WAAO,CAACA,GAAG,GAAGN,YAAY,EAAnB,MAA2B,KAAlC,EAAyC;AACxCP,gBAAU,CAACd,IAAX,CAAgB2B,GAAhB;AACA;;AACD,WAAO1B,UAAU,CAACa,UAAD,CAAjB;AACA;AAED;;;AAEA1B,MAAI,CAACwC,OAAL,GAAe,OAAf;AACAxC,MAAI,CAACyC,MAAL,GAAchB,UAAd;AACAzB,MAAI,CAAC0C,MAAL,GAAcJ,UAAd;AAEA,CAxMC,EAwMA,SAAiC,SAAjC,GAAkDvC,OAxMlD,CAAD,C;;;;;;;ACDY;;AAEb,MAAMd,SAAS,GAAG0D,mBAAO,CAAC,CAAD,CAAP,CAAmB1D,SAArC;;AAEA,MAAM2D,KAAK,GAAG;AACZC,MAAI,EAAE,CADM;AAEZC,MAAI,EAAE,CAFM;AAGZC,OAAK,EAAE,CAHK;AAIZC,KAAG,EAAE,CAJO;AAKZC,OAAK,EAAE,CALK;AAMZC,QAAM,EAAE;AANI,CAAd;AASA;;;;;;;AAMA,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,UAAQC,MAAM,CAACD,IAAD,CAAd;AACE,SAAKR,KAAK,CAACC,IAAX;AACE,aAAO,MAAP;;AACF,SAAKD,KAAK,CAACE,IAAX;AACE,aAAO,MAAP;;AACF,SAAKF,KAAK,CAACG,KAAX;AACE,aAAO,OAAP;;AACF,SAAKH,KAAK,CAACI,GAAX;AACE,aAAO,KAAP;;AACF,SAAKJ,KAAK,CAACK,KAAX;AACE,aAAO,OAAP;;AACF,SAAKL,KAAK,CAACM,MAAX;AACE,aAAO,QAAP;;AACA;;AACF;AACE,aAAO,WAAP;AAfJ;AAiBD;AAED;;;;;;;;AAMA,SAASI,SAAT,CAAmBF,IAAnB,EAAyB;AACvB,UAAQC,MAAM,CAACD,IAAD,CAAd;AACE,SAAKR,KAAK,CAACC,IAAX;AACE,aAAO,CAAP;;AACF,SAAKD,KAAK,CAACE,IAAX;AACE,aAAO,CAAP;;AACF,SAAKF,KAAK,CAACG,KAAX;AACE,aAAO,CAAP;;AACF,SAAKH,KAAK,CAACI,GAAX;AACE,aAAO,CAAP;;AACF,SAAKJ,KAAK,CAACK,KAAX;AACE,aAAO,CAAP;;AACF,SAAKL,KAAK,CAACM,MAAX;AACE,aAAO,CAAP;;AACA;;AACF;AACE,aAAO,CAAC,CAAR;AAfJ;AAiBD;AAED;;;;;;;;AAMA,SAASK,OAAT,CAAiBH,IAAjB,EAAuB;AACrB,UAAQlD,MAAM,CAACkD,IAAD,CAAd;AACE,SAAK,MAAL;AACE,aAAOR,KAAK,CAACC,IAAb;;AACF,SAAK,MAAL;AACE,aAAOD,KAAK,CAACE,IAAb;;AACF,SAAK,OAAL;AACE,aAAOF,KAAK,CAACG,KAAb;;AACF,SAAK,KAAL;AACE,aAAOH,KAAK,CAACI,GAAb;;AACF,SAAK,OAAL;AACE,aAAOJ,KAAK,CAACK,KAAb;;AACF,SAAK,QAAL;AACE,aAAOL,KAAK,CAACM,MAAb;;AACA;;AACF;AACE,aAAO,CAAC,CAAR;AAfJ;AAiBD;AAED;;;;;;;;;AAOA,SAASM,UAAT,CAAoBC,IAApB,EAA0BC,YAA1B,EAAwC;AACtC,MAAID,IAAI,KAAK,CAAb,EAAgB;AACd,QAAIE,OAAO,GAAG,IAAIC,KAAJ,CAAUH,IAAV,CAAd;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAApB,EAA0BI,CAAC,EAA3B,EAA+B;AAC7BF,aAAO,CAACE,CAAD,CAAP,GAAaH,YAAY,EAAzB;AACD;;AACD,WAAOC,OAAP;AACD,GAND,MAMO;AACL,WAAOD,YAAY,EAAnB;AACD;AACF;AAED;;;;;;;;;;AAQA,SAASI,QAAT,CAAkBxE,MAAlB,EAA0B8D,IAA1B,EAAgCK,IAAhC,EAAsC;AACpC,UAAQL,IAAR;AACE,SAAKR,KAAK,CAACC,IAAX;AACE,aAAOvD,MAAM,CAACyE,SAAP,CAAiBN,IAAjB,CAAP;;AACF,SAAKb,KAAK,CAACE,IAAX;AACE,aAAOkB,QAAQ,CAAC1E,MAAM,CAACO,SAAP,CAAiB4D,IAAjB,CAAD,CAAf;;AACF,SAAKb,KAAK,CAACG,KAAX;AACE,aAAOS,UAAU,CAACC,IAAD,EAAOnE,MAAM,CAAC2E,SAAP,CAAiBC,IAAjB,CAAsB5E,MAAtB,CAAP,CAAjB;;AACF,SAAKsD,KAAK,CAACI,GAAX;AACE,aAAOQ,UAAU,CAACC,IAAD,EAAOnE,MAAM,CAAC6E,SAAP,CAAiBD,IAAjB,CAAsB5E,MAAtB,CAAP,CAAjB;;AACF,SAAKsD,KAAK,CAACK,KAAX;AACE,aAAOO,UAAU,CAACC,IAAD,EAAOnE,MAAM,CAAC8E,WAAP,CAAmBF,IAAnB,CAAwB5E,MAAxB,CAAP,CAAjB;;AACF,SAAKsD,KAAK,CAACM,MAAX;AACE,aAAOM,UAAU,CAACC,IAAD,EAAOnE,MAAM,CAAC+E,WAAP,CAAmBH,IAAnB,CAAwB5E,MAAxB,CAAP,CAAjB;;AACA;;AACF;AACEL,eAAS,CAAC,IAAD,2BAAyBmE,IAAzB,EAAT;AACA,aAAOkB,SAAP;AAhBJ;AAkBD;AAED;;;;;;;;AAMA,SAASN,QAAT,CAAkBvD,KAAlB,EAAyB;AACvB,MAAIA,KAAK,CAACE,UAAN,CAAiBF,KAAK,CAACD,MAAN,GAAe,CAAhC,MAAuC,CAA3C,EAA8C;AAC5C,WAAOC,KAAK,CAAC8D,SAAN,CAAgB,CAAhB,EAAmB9D,KAAK,CAACD,MAAN,GAAe,CAAlC,CAAP;AACD;;AACD,SAAOC,KAAP;AACD;;AAEDX,MAAM,CAACC,OAAP,GAAiB6C,KAAjB;AACA9C,MAAM,CAACC,OAAP,CAAeoD,OAAf,GAAyBA,OAAzB;AACArD,MAAM,CAACC,OAAP,CAAeuD,SAAf,GAA2BA,SAA3B;AACAxD,MAAM,CAACC,OAAP,CAAewD,OAAf,GAAyBA,OAAzB;AACAzD,MAAM,CAACC,OAAP,CAAe+D,QAAf,GAA0BA,QAA1B,C;;;;;;;AC5Ja;;AAEb,MAAM;AAAEU;AAAF,IAAe7B,mBAAO,CAAC,CAAD,CAA5B;;AAEA,MAAM8B,KAAK,GAAG9B,mBAAO,CAAC,CAAD,CAArB;;AACA,MAAM+B,IAAI,GAAG/B,mBAAO,CAAC,CAAD,CAApB;;AACA,MAAMgC,UAAU,GAAGhC,mBAAO,CAAC,CAAD,CAA1B;;AACA,MAAMxB,QAAQ,GAAGwB,mBAAO,CAAC,CAAD,CAAxB;AAEA;;;;;;;;AAMA,MAAMiC,YAAN,CAAmB;AACjBC,aAAW,CAACH,IAAD,EAAO;AAChB,UAAMpF,MAAM,GAAG,IAAIkF,QAAJ,CAAaE,IAAb,CAAf;AACApF,UAAM,CAACwF,YAAP,GAFgB,CAIhB;;AACAL,SAAK,CAACxF,SAAN,CAAgBK,MAAM,CAACO,SAAP,CAAiB,CAAjB,MAAwB,KAAxC,EAA+C,uBAA/C,EALgB,CAOhB;;AACA,UAAM2C,OAAO,GAAGlD,MAAM,CAACyF,QAAP,EAAhB;AACAN,SAAK,CAACxF,SAAN,CAAgBuD,OAAO,GAAG,CAA1B,EAA6B,iBAA7B,EATgB,CAWhB;;AACA,SAAKwC,MAAL,GAAcL,UAAU,CAACrF,MAAD,EAASkD,OAAT,CAAxB;AACA,SAAKlD,MAAL,GAAcA,MAAd;AACD;AAED;;;;;AAGA,MAAIkD,OAAJ,GAAc;AACZ,QAAI,KAAKwC,MAAL,CAAYxC,OAAZ,KAAwB,CAA5B,EAA+B;AAC7B,aAAO,gBAAP;AACD,KAFD,MAEO;AACL,aAAO,sBAAP;AACD;AACF;AAED;;;;;;;;;AAOA,MAAIyC,eAAJ,GAAsB;AACpB,WAAO,KAAKD,MAAL,CAAYC,eAAnB;AACD;AAED;;;;;;;AAKA,MAAIC,UAAJ,GAAiB;AACf,WAAO,KAAKF,MAAL,CAAYE,UAAnB;AACD;AAED;;;;;;;;AAMA,MAAIC,gBAAJ,GAAuB;AACrB,WAAO,KAAKH,MAAL,CAAYG,gBAAnB;AACD;AAED;;;;;;;AAKAC,cAAY,CAACC,aAAD,EAAgB;AAC1B,UAAMC,SAAS,GAAG,KAAKH,gBAAL,CAAsBI,IAAtB,CACfC,GAAD,IAASA,GAAG,CAAC5F,IAAJ,KAAayF,aADN,CAAlB;AAGA,QAAIC,SAAJ,EAAe,OAAOA,SAAS,CAAC7E,KAAjB;AACf,WAAO,IAAP;AACD;AAED;;;;;;;AAKAgF,yBAAuB,CAACC,YAAD,EAAe;AACpC,UAAMC,QAAQ,GAAG,KAAKC,eAAL,CAAqBF,YAArB,CAAjB;AACA,QAAIC,QAAJ,EAAc,OAAOA,QAAQ,CAACE,IAAT,CAAc,EAAd,CAAP;AACd,WAAO,IAAP;AACD;AAED;;;;;;;;;;;;AAUA,MAAIC,SAAJ,GAAgB;AACd,WAAO,KAAKd,MAAL,CAAYc,SAAnB;AACD;;AAED3E,UAAQ,GAAG;AACT,WAAOA,QAAQ,CAAC4E,IAAT,CAAc,IAAd,CAAP;AACD;AAED;;;;;;;AAKAH,iBAAe,CAACF,YAAD,EAAe;AAC5B,QAAIC,QAAJ;;AACA,QAAI,OAAOD,YAAP,KAAwB,QAA5B,EAAsC;AACpC;AACAC,cAAQ,GAAG,KAAKX,MAAL,CAAYc,SAAZ,CAAsBP,IAAtB,CAA2B,UAAUC,GAAV,EAAe;AACnD,eAAOA,GAAG,CAAC5F,IAAJ,KAAa8F,YAApB;AACD,OAFU,CAAX;AAGD,KALD,MAKO;AACLC,cAAQ,GAAGD,YAAX;AACD,KAT2B,CAW5B;;;AACAjB,SAAK,CAACxF,SAAN,CACE0G,QAAQ,KAAKrB,SADf,gCAEyBoB,YAFzB,GAZ4B,CAiB5B;;AACA,SAAKpG,MAAL,CAAY0G,IAAZ,CAAiBL,QAAQ,CAACpG,MAA1B;;AAEA,QAAIoG,QAAQ,CAACM,MAAb,EAAqB;AACnB;AACA,aAAOvB,IAAI,CAACuB,MAAL,CAAY,KAAK3G,MAAjB,EAAyBqG,QAAzB,EAAmC,KAAKX,MAAL,CAAYC,eAA/C,CAAP;AACD,KAHD,MAGO;AACL;AACA,aAAOP,IAAI,CAACwB,SAAL,CAAe,KAAK5G,MAApB,EAA4BqG,QAA5B,CAAP;AACD;AACF;AAED;;;;;;;AAKAQ,oBAAkB,CAACT,YAAD,EAAe;AAC/B,UAAMC,QAAQ,GAAG,KAAKX,MAAL,CAAYc,SAAZ,CAAsBP,IAAtB,CAA2B,UAAUC,GAAV,EAAe;AACzD,aAAOA,GAAG,CAAC5F,IAAJ,KAAa8F,YAApB;AACD,KAFgB,CAAjB;AAGA,WAAOC,QAAQ,KAAKrB,SAApB;AACD;AAED;;;;;;;AAKA8B,iBAAe,CAACf,aAAD,EAAgB;AAC7B,UAAMC,SAAS,GAAG,KAAKH,gBAAL,CAAsBI,IAAtB,CACfC,GAAD,IAASA,GAAG,CAAC5F,IAAJ,KAAayF,aADN,CAAlB;AAGA,WAAOC,SAAS,KAAKhB,SAArB;AACD;;AA5JgB;;AA+JnBxE,MAAM,CAACC,OAAP,GAAiB6E,YAAjB,C;;;;;;;AC9KA;AAAA;AAAA;AAAA;AAAA;AAEA,MAAM,iBAAiB,GAAG,OAAO,CAAjC;AAWM,MAAO,QAAP,CAAe;AAiCnB;;;;;;;;AAQA,gBAE+B;AAAA,QAD7B,IAC6B,uEADX,iBACW;AAAA,QAA7B,OAA6B,uEAAF,EAAE;AAE7B,QAAI,WAAW,GAAG,KAAlB;;AACA,QAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAI,GAAG,IAAI,WAAJ,CAAgB,IAAhB,CAAP;AACD,KAFD,MAEO;AACL,iBAAW,GAAG,IAAd;AACA,WAAK,eAAL,GAAuB,IAAI,CAAC,UAA5B;AACD;;AAED,UAAM,MAAM,GAAG,OAAO,CAAC,MAAR,GAAiB,OAAO,CAAC,MAAR,KAAmB,CAApC,GAAwC,CAAvD;AACA,UAAM,UAAU,GAAG,IAAI,CAAC,UAAL,GAAkB,MAArC;AACA,QAAI,QAAQ,GAAG,MAAf;;AACA,QAAI,WAAW,CAAC,MAAZ,CAAmB,IAAnB,KAA4B,IAAI,YAAY,QAAhD,EAA0D;AACxD,UAAI,IAAI,CAAC,UAAL,KAAoB,IAAI,CAAC,MAAL,CAAY,UAApC,EAAgD;AAC9C,gBAAQ,GAAG,IAAI,CAAC,UAAL,GAAkB,MAA7B;AACD;;AACD,UAAI,GAAG,IAAI,CAAC,MAAZ;AACD;;AACD,QAAI,WAAJ,EAAiB;AACf,WAAK,eAAL,GAAuB,UAAvB;AACD,KAFD,MAEO;AACL,WAAK,eAAL,GAAuB,CAAvB;AACD;;AACD,SAAK,MAAL,GAAc,IAAd;AACA,SAAK,MAAL,GAAc,UAAd;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,UAAL,GAAkB,QAAlB;AACA,SAAK,MAAL,GAAc,CAAd;AACA,SAAK,YAAL,GAAoB,IAApB;AACA,SAAK,KAAL,GAAa,IAAI,QAAJ,CAAa,KAAK,MAAlB,EAA0B,QAA1B,EAAoC,UAApC,CAAb;AACA,SAAK,KAAL,GAAa,CAAb;AACA,SAAK,MAAL,GAAc,EAAd;AACD;AAED;;;;;;;;AAMO,WAAS,GAAuB;AAAA,QAAtB,UAAsB,uEAAD,CAAC;AACrC,WAAO,KAAK,MAAL,GAAc,UAAd,IAA4B,KAAK,MAAxC;AACD;AAED;;;;;;;AAKO,gBAAc;AACnB,WAAO,KAAK,YAAZ;AACD;AAED;;;;;AAGO,iBAAe;AACpB,SAAK,YAAL,GAAoB,IAApB;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,aAAW;AAChB,WAAO,CAAC,KAAK,YAAb;AACD;AAED;;;;;AAGO,cAAY;AACjB,SAAK,YAAL,GAAoB,KAApB;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,MAAI,GAAc;AAAA,QAAb,CAAa,uEAAD,CAAC;AACvB,SAAK,MAAL,IAAe,CAAf;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,MAAI,CAAC,MAAD,EAAe;AACxB,SAAK,MAAL,GAAc,MAAd;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,MAAI;AACT,SAAK,KAAL,GAAa,KAAK,MAAlB;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,OAAK;AACV,SAAK,MAAL,GAAc,KAAK,KAAnB;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,UAAQ;AACb,SAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,MAAtB;;AACA,WAAO,IAAP;AACD;AAED;;;;;;;AAKO,SAAO;AACZ,UAAM,MAAM,GAAG,KAAK,MAAL,CAAY,GAAZ,EAAf;;AACA,QAAI,MAAM,KAAK,SAAf,EAA0B;AACxB,YAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN;AACD;;AACD,SAAK,IAAL,CAAU,MAAV;AACA,WAAO,IAAP;AACD;AAED;;;;;AAGO,QAAM;AACX,SAAK,MAAL,GAAc,CAAd;AACA,WAAO,IAAP;AACD;AAED;;;;;;;;;AAOO,iBAAe,GAAuB;AAAA,QAAtB,UAAsB,uEAAD,CAAC;;AAC3C,QAAI,CAAC,KAAK,SAAL,CAAe,UAAf,CAAL,EAAiC;AAC/B,YAAM,YAAY,GAAG,KAAK,MAAL,GAAc,UAAnC;AACA,YAAM,SAAS,GAAG,YAAY,GAAG,CAAjC;AACA,YAAM,QAAQ,GAAG,IAAI,UAAJ,CAAe,SAAf,CAAjB;AACA,cAAQ,CAAC,GAAT,CAAa,IAAI,UAAJ,CAAe,KAAK,MAApB,CAAb;AACA,WAAK,MAAL,GAAc,QAAQ,CAAC,MAAvB;AACA,WAAK,MAAL,GAAc,KAAK,UAAL,GAAkB,SAAhC;AACA,WAAK,KAAL,GAAa,IAAI,QAAJ,CAAa,KAAK,MAAlB,CAAb;AACD;;AACD,WAAO,IAAP;AACD;AAED;;;;;;AAIO,aAAW;AAChB,WAAO,KAAK,SAAL,OAAqB,CAA5B;AACD;AAED;;;;;AAGO,UAAQ;AACb,WAAO,KAAK,KAAL,CAAW,OAAX,CAAmB,KAAK,MAAL,EAAnB,CAAP;AACD;AAED;;;;;AAGO,WAAS;AACd,WAAO,KAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,MAAL,EAApB,CAAP;AACD;AAED;;;;;AAGO,UAAQ;AACb,WAAO,KAAK,SAAL,EAAP;AACD;AAED;;;;;AAGO,WAAS,GAAc;AAAA,QAAb,CAAa,uEAAD,CAAC;AAC5B,UAAM,KAAK,GAAG,IAAI,UAAJ,CAAe,CAAf,CAAd;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AAC1B,WAAK,CAAC,CAAD,CAAL,GAAW,KAAK,QAAL,EAAX;AACD;;AACD,WAAO,KAAP;AACD;AAED;;;;;AAGO,WAAS;AACd,UAAM,KAAK,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,MAAzB,EAAiC,KAAK,YAAtC,CAAd;;AACA,SAAK,MAAL,IAAe,CAAf;AACA,WAAO,KAAP;AACD;AAED;;;;;AAGO,YAAU;AACf,UAAM,KAAK,GAAG,KAAK,KAAL,CAAW,SAAX,CAAqB,KAAK,MAA1B,EAAkC,KAAK,YAAvC,CAAd;;AACA,SAAK,MAAL,IAAe,CAAf;AACA,WAAO,KAAP;AACD;AAED;;;;;AAGO,WAAS;AACd,UAAM,KAAK,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,MAAzB,EAAiC,KAAK,YAAtC,CAAd;;AACA,SAAK,MAAL,IAAe,CAAf;AACA,WAAO,KAAP;AACD;AAED;;;;;AAGO,YAAU;AACf,UAAM,KAAK,GAAG,KAAK,KAAL,CAAW,SAAX,CAAqB,KAAK,MAA1B,EAAkC,KAAK,YAAvC,CAAd;;AACA,SAAK,MAAL,IAAe,CAAf;AACA,WAAO,KAAP;AACD;AAED;;;;;AAGO,aAAW;AAChB,UAAM,KAAK,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,KAAK,MAA3B,EAAmC,KAAK,YAAxC,CAAd;;AACA,SAAK,MAAL,IAAe,CAAf;AACA,WAAO,KAAP;AACD;AAED;;;;;AAGO,aAAW;AAChB,UAAM,KAAK,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,KAAK,MAA3B,EAAmC,KAAK,YAAxC,CAAd;;AACA,SAAK,MAAL,IAAe,CAAf;AACA,WAAO,KAAP;AACD;AAED;;;;;AAGO,UAAQ;AACb,WAAO,MAAM,CAAC,YAAP,CAAoB,KAAK,QAAL,EAApB,CAAP;AACD;AAED;;;;;AAGO,WAAS,GAAc;AAAA,QAAb,CAAa,uEAAD,CAAC;AAC5B,QAAI,MAAM,GAAG,EAAb;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AAC1B,YAAM,IAAI,KAAK,QAAL,EAAV;AACD;;AACD,WAAO,MAAP;AACD;AAED;;;;;;AAIO,UAAQ,GAAc;AAAA,QAAb,CAAa,uEAAD,CAAC;AAC3B,UAAM,OAAO,GAAG,KAAK,SAAL,CAAe,CAAf,CAAhB;AACA,WAAO,mDAAM,CAAC,OAAD,CAAb;AACD;AAED;;;;;;AAIO,cAAY,CAAC,KAAD,EAAe;AAChC,SAAK,UAAL,CAAgB,KAAK,GAAG,IAAH,GAAU,IAA/B;AACA,WAAO,IAAP;AACD;AAED;;;;;AAGO,WAAS,CAAC,KAAD,EAAc;AAC5B,SAAK,eAAL,CAAqB,CAArB;;AACA,SAAK,KAAL,CAAW,OAAX,CAAmB,KAAK,MAAL,EAAnB,EAAkC,KAAlC;;AACA,SAAK,sBAAL;;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,YAAU,CAAC,KAAD,EAAc;AAC7B,SAAK,eAAL,CAAqB,CAArB;;AACA,SAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,MAAL,EAApB,EAAmC,KAAnC;;AACA,SAAK,sBAAL;;AACA,WAAO,IAAP;AACD;AAED;;;;;AAGO,WAAS,CAAC,KAAD,EAAc;AAC5B,WAAO,KAAK,UAAL,CAAgB,KAAhB,CAAP;AACD;AAED;;;;;;AAIO,YAAU,CAAC,KAAD,EAAyB;AACxC,SAAK,eAAL,CAAqB,KAAK,CAAC,MAA3B;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,WAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,MAAL,EAApB,EAAmC,KAAK,CAAC,CAAD,CAAxC;AACD;;AACD,SAAK,sBAAL;;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,YAAU,CAAC,KAAD,EAAc;AAC7B,SAAK,eAAL,CAAqB,CAArB;;AACA,SAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,MAAzB,EAAiC,KAAjC,EAAwC,KAAK,YAA7C;;AACA,SAAK,MAAL,IAAe,CAAf;;AACA,SAAK,sBAAL;;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,aAAW,CAAC,KAAD,EAAc;AAC9B,SAAK,eAAL,CAAqB,CAArB;;AACA,SAAK,KAAL,CAAW,SAAX,CAAqB,KAAK,MAA1B,EAAkC,KAAlC,EAAyC,KAAK,YAA9C;;AACA,SAAK,MAAL,IAAe,CAAf;;AACA,SAAK,sBAAL;;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,YAAU,CAAC,KAAD,EAAc;AAC7B,SAAK,eAAL,CAAqB,CAArB;;AACA,SAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,MAAzB,EAAiC,KAAjC,EAAwC,KAAK,YAA7C;;AACA,SAAK,MAAL,IAAe,CAAf;;AACA,SAAK,sBAAL;;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,aAAW,CAAC,KAAD,EAAc;AAC9B,SAAK,eAAL,CAAqB,CAArB;;AACA,SAAK,KAAL,CAAW,SAAX,CAAqB,KAAK,MAA1B,EAAkC,KAAlC,EAAyC,KAAK,YAA9C;;AACA,SAAK,MAAL,IAAe,CAAf;;AACA,SAAK,sBAAL;;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,cAAY,CAAC,KAAD,EAAc;AAC/B,SAAK,eAAL,CAAqB,CAArB;;AACA,SAAK,KAAL,CAAW,UAAX,CAAsB,KAAK,MAA3B,EAAmC,KAAnC,EAA0C,KAAK,YAA/C;;AACA,SAAK,MAAL,IAAe,CAAf;;AACA,SAAK,sBAAL;;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,cAAY,CAAC,KAAD,EAAc;AAC/B,SAAK,eAAL,CAAqB,CAArB;;AACA,SAAK,KAAL,CAAW,UAAX,CAAsB,KAAK,MAA3B,EAAmC,KAAnC,EAA0C,KAAK,YAA/C;;AACA,SAAK,MAAL,IAAe,CAAf;;AACA,SAAK,sBAAL;;AACA,WAAO,IAAP;AACD;AAED;;;;;;AAIO,WAAS,CAAC,GAAD,EAAY;AAC1B,WAAO,KAAK,UAAL,CAAgB,GAAG,CAAC,UAAJ,CAAe,CAAf,CAAhB,CAAP;AACD;AAED;;;;;;AAIO,YAAU,CAAC,GAAD,EAAY;AAC3B,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,CAAC,EAAjC,EAAqC;AACnC,WAAK,UAAL,CAAgB,GAAG,CAAC,UAAJ,CAAe,CAAf,CAAhB;AACD;;AACD,WAAO,IAAP;AACD;AAED;;;;;;AAIO,WAAS,CAAC,GAAD,EAAY;AAC1B,UAAM,OAAO,GAAG,mDAAM,CAAC,GAAD,CAAtB;AACA,WAAO,KAAK,UAAL,CAAgB,OAAhB,CAAP;AACD;AAED;;;;;;;AAKO,SAAO;AACZ,WAAO,IAAI,UAAJ,CAAe,KAAK,MAApB,EAA4B,KAAK,UAAjC,EAA6C,KAAK,eAAlD,CAAP;AACD;AAED;;;;;;AAIQ,wBAAsB;AAC5B,QAAI,KAAK,MAAL,GAAc,KAAK,eAAvB,EAAwC;AACtC,WAAK,eAAL,GAAuB,KAAK,MAA5B;AACD;AACF;;AAhfkB,C;;;;;;;ACbR;;AAEb,MAAMhC,KAAK,GAAGD,mBAAO,CAAC,CAAD,CAArB,C,CAEA;;AAEA;;;;;;;;;AAOA,SAASuD,SAAT,CAAmB5G,MAAnB,EAA2BqG,QAA3B,EAAqC;AACnC;AACA,QAAMvC,IAAI,GAAGR,KAAK,CAACW,OAAN,CAAcoC,QAAQ,CAACvC,IAAvB,CAAb,CAFmC,CAInC;;AACA,MAAIK,IAAI,GAAGkC,QAAQ,CAAClC,IAAT,GAAgBb,KAAK,CAACU,SAAN,CAAgBF,IAAhB,CAA3B,CALmC,CAOnC;;AACA,MAAIsB,IAAI,GAAG,IAAId,KAAJ,CAAUH,IAAV,CAAX;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAApB,EAA0BI,CAAC,EAA3B,EAA+B;AAC7Ba,QAAI,CAACb,CAAD,CAAJ,GAAUjB,KAAK,CAACkB,QAAN,CAAexE,MAAf,EAAuB8D,IAAvB,EAA6B,CAA7B,CAAV;AACD;;AAED,SAAOsB,IAAP;AACD;AAED;;;;;;;;;;AAQA,SAASuB,MAAT,CAAgB3G,MAAhB,EAAwBqG,QAAxB,EAAkCV,eAAlC,EAAmD;AACjD;AACA,QAAM7B,IAAI,GAAGR,KAAK,CAACW,OAAN,CAAcoC,QAAQ,CAACvC,IAAvB,CAAb;AACA,QAAMiD,KAAK,GAAGV,QAAQ,CAAClC,IAAT,GAAgBkC,QAAQ,CAAClC,IAAT,GAAgBb,KAAK,CAACU,SAAN,CAAgBF,IAAhB,CAAhC,GAAwD,CAAtE,CAHiD,CAKjD;AACA;;AACA,MAAIK,IAAI,GAAGwB,eAAe,CAACzE,MAA3B,CAPiD,CASjD;;AACA,MAAIkE,IAAI,GAAG,IAAId,KAAJ,CAAUH,IAAV,CAAX;AACA,QAAM6C,IAAI,GAAGrB,eAAe,CAACsB,UAA7B;;AAEA,OAAK,IAAI1C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAApB,EAA0BI,CAAC,EAA3B,EAA+B;AAC7B,QAAI2C,aAAa,GAAGlH,MAAM,CAACC,MAA3B;AACAmF,QAAI,CAACb,CAAD,CAAJ,GAAUjB,KAAK,CAACkB,QAAN,CAAexE,MAAf,EAAuB8D,IAAvB,EAA6BiD,KAA7B,CAAV;AACA/G,UAAM,CAAC0G,IAAP,CAAYQ,aAAa,GAAGF,IAA5B;AACD;;AAED,SAAO5B,IAAP;AACD;;AAED5E,MAAM,CAACC,OAAP,CAAemG,SAAf,GAA2BA,SAA3B;AACApG,MAAM,CAACC,OAAP,CAAekG,MAAf,GAAwBA,MAAxB,C;;;;;;;AC5Da;;AAEb,MAAMxB,KAAK,GAAG9B,mBAAO,CAAC,CAAD,CAArB;;AACA,MAAMC,KAAK,GAAGD,mBAAO,CAAC,CAAD,CAArB,C,CAEA;;;AACA,MAAM8D,IAAI,GAAG,CAAb;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA;;;;;;;;;;;;AAWA,SAAS5B,MAAT,CAAgB1F,MAAhB,EAAwBkD,OAAxB,EAAiC;AAC/B;AACA;AACA,MAAIwC,MAAM,GAAG;AAAEC,mBAAe,EAAE;AAAEzE,YAAM,EAAElB,MAAM,CAACK,UAAP;AAAV;AAAnB,GAAb,CAH+B,CAK/B;;AACAqF,QAAM,CAACxC,OAAP,GAAiBA,OAAjB,CAN+B,CAQ/B;;AACA,MAAIqE,OAAO,GAAGC,cAAc,CAACxH,MAAD,CAA5B;AACA0F,QAAM,CAACC,eAAP,CAAuB8B,EAAvB,GAA4BF,OAAO,CAACG,QAApC,CAV+B,CAUe;;AAC9ChC,QAAM,CAACC,eAAP,CAAuBrF,IAAvB,GAA8BiH,OAAO,CAACI,UAAtC,CAX+B,CAWmB;;AAClDjC,QAAM,CAACE,UAAP,GAAoB2B,OAAO,CAAC3B,UAA5B,CAZ+B,CAc/B;;AACAF,QAAM,CAACG,gBAAP,GAA0B+B,cAAc,CAAC5H,MAAD,CAAxC,CAf+B,CAiB/B;;AACA,MAAIwG,SAAS,GAAGqB,aAAa,CAAC7H,MAAD,EAASuH,OAAO,CAACG,QAAjB,EAA2BxE,OAA3B,CAA7B;AACAwC,QAAM,CAACc,SAAP,GAAmBA,SAAS,CAACA,SAA7B;AACAd,QAAM,CAACC,eAAP,CAAuBsB,UAAvB,GAAoCT,SAAS,CAACS,UAA9C;AAEA,SAAOvB,MAAP;AACD;;AAED,MAAMoC,YAAY,GAAG,CAArB;AAEA;;;;;;;;;;;;AAWA,SAASN,cAAT,CAAwBxH,MAAxB,EAAgC;AAC9B,MAAI0H,QAAJ,EAAcC,UAAd;AACA,QAAMJ,OAAO,GAAGvH,MAAM,CAACK,UAAP,EAAhB;;AACA,MAAIkH,OAAO,KAAKJ,IAAhB,EAAsB;AACpBhC,SAAK,CAACxF,SAAN,CAAiBK,MAAM,CAACK,UAAP,OAAwB8G,IAAzC,EAAgD,wCAAhD;AACA,WAAO,EAAP;AACD,GAHD,MAGO;AACLhC,SAAK,CAACxF,SAAN,CAAiB4H,OAAO,KAAKH,YAA7B,EAA4C,kCAA5C,EADK,CAGL;;AACA,UAAMW,aAAa,GAAG/H,MAAM,CAACK,UAAP,EAAtB;AACA,QAAIuF,UAAU,GAAG,IAAItB,KAAJ,CAAUyD,aAAV,CAAjB;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGD,aAAxB,EAAuCC,GAAG,EAA1C,EAA8C;AAC5C;AACA,UAAI1H,IAAI,GAAG6E,KAAK,CAAChF,QAAN,CAAeH,MAAf,CAAX,CAF4C,CAI5C;;AACA,YAAMmE,IAAI,GAAGnE,MAAM,CAACK,UAAP,EAAb;;AACA,UAAI8D,IAAI,KAAK2D,YAAb,EAA2B;AAAE;AAC3BJ,gBAAQ,GAAGM,GAAX;AACAL,kBAAU,GAAGrH,IAAb;AACD;;AAEDsF,gBAAU,CAACoC,GAAD,CAAV,GAAkB;AAChB1H,YAAI,EAAEA,IADU;AAEhB6D,YAAI,EAAEA;AAFU,OAAlB;AAID;AACF;;AACD,SAAO;AACLyB,cAAU,EAAEA,UADP;AAEL8B,YAAQ,EAAEA,QAFL;AAGLC,cAAU,EAAEA;AAHP,GAAP;AAKD;AAED;;;;;;;;;;;AASA,SAASC,cAAT,CAAwB5H,MAAxB,EAAgC;AAC9B,QAAMiI,QAAQ,GAAGjI,MAAM,CAACK,UAAP,EAAjB;;AACA,MAAI4H,QAAQ,KAAKd,IAAjB,EAAuB;AACrBhC,SAAK,CAACxF,SAAN,CAAiBK,MAAM,CAACK,UAAP,OAAwB8G,IAAzC,EAAgD,wCAAhD;AACA,WAAO,EAAP;AACD,GAHD,MAGO;AACLhC,SAAK,CAACxF,SAAN,CAAiBsI,QAAQ,KAAKX,YAA9B,EAA6C,kCAA7C,EADK,CAGL;;AACA,UAAMY,aAAa,GAAGlI,MAAM,CAACK,UAAP,EAAtB;AACA,QAAI8H,UAAU,GAAG,IAAI7D,KAAJ,CAAU4D,aAAV,CAAjB;;AACA,SAAK,IAAIE,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGF,aAA1B,EAAyCE,IAAI,EAA7C,EAAiD;AAC/C;AACA,UAAI9H,IAAI,GAAG6E,KAAK,CAAChF,QAAN,CAAeH,MAAf,CAAX,CAF+C,CAI/C;;AACA,UAAI8D,IAAI,GAAG9D,MAAM,CAACK,UAAP,EAAX;AACA8E,WAAK,CAACxF,SAAN,CAAkBmE,IAAI,GAAG,CAAR,IAAeA,IAAI,GAAG,CAAvC,2BAA8DA,IAA9D,GAN+C,CAQ/C;;AACA,UAAIK,IAAI,GAAGnE,MAAM,CAACK,UAAP,EAAX;AACA,UAAIc,KAAK,GAAGmC,KAAK,CAACkB,QAAN,CAAexE,MAAf,EAAuB8D,IAAvB,EAA6BK,IAA7B,CAAZ,CAV+C,CAY/C;;AACAgB,WAAK,CAACpF,OAAN,CAAcC,MAAd;AAEAmI,gBAAU,CAACC,IAAD,CAAV,GAAmB;AACjB9H,YAAI,EAAEA,IADW;AAEjBwD,YAAI,EAAER,KAAK,CAACO,OAAN,CAAcC,IAAd,CAFW;AAGjB3C,aAAK,EAAEA;AAHU,OAAnB;AAKD;AACF;;AACD,SAAOgH,UAAP;AACD;AAED;;;;;;;;;;;;;;;;;;AAiBA,SAASN,aAAT,CAAuB7H,MAAvB,EAA+B0H,QAA/B,EAAyCxE,OAAzC,EAAkD;AAChD,QAAMmF,OAAO,GAAGrI,MAAM,CAACK,UAAP,EAAhB;AACA,MAAI4G,UAAU,GAAG,CAAjB;;AACA,MAAIoB,OAAO,KAAKlB,IAAhB,EAAsB;AACpBhC,SAAK,CAACxF,SAAN,CAAiBK,MAAM,CAACK,UAAP,OAAwB8G,IAAzC,EAAgD,uCAAhD;AACA,WAAO,EAAP;AACD,GAHD,MAGO;AACLhC,SAAK,CAACxF,SAAN,CAAiB0I,OAAO,KAAKhB,WAA7B,EAA2C,iCAA3C,EADK,CAGL;;AACA,UAAMiB,YAAY,GAAGtI,MAAM,CAACK,UAAP,EAArB;AACA,QAAImG,SAAS,GAAG,IAAIlC,KAAJ,CAAUgE,YAAV,CAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAApB,EAAkCC,CAAC,EAAnC,EAAuC;AACrC;AACA,UAAIjI,IAAI,GAAG6E,KAAK,CAAChF,QAAN,CAAeH,MAAf,CAAX,CAFqC,CAIrC;;AACA,YAAMwI,cAAc,GAAGxI,MAAM,CAACK,UAAP,EAAvB,CALqC,CAOrC;;AACA,UAAIoI,aAAa,GAAG,IAAInE,KAAJ,CAAUkE,cAAV,CAApB;;AACA,WAAK,IAAIR,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGQ,cAAxB,EAAwCR,GAAG,EAA3C,EAA+C;AAC7CS,qBAAa,CAACT,GAAD,CAAb,GAAqBhI,MAAM,CAACK,UAAP,EAArB;AACD,OAXoC,CAarC;;;AACA,UAAI8H,UAAU,GAAGP,cAAc,CAAC5H,MAAD,CAA/B,CAdqC,CAgBrC;;AACA,UAAI8D,IAAI,GAAG9D,MAAM,CAACK,UAAP,EAAX;AACA8E,WAAK,CAACxF,SAAN,CAAkBmE,IAAI,GAAG,CAAR,IAAeA,IAAI,GAAG,CAAvC,2BAA8DA,IAA9D,GAlBqC,CAoBrC;AACA;AACA;;AACA,YAAM4E,OAAO,GAAG1I,MAAM,CAACK,UAAP,EAAhB,CAvBqC,CAyBrC;;AACA,UAAIJ,MAAM,GAAGD,MAAM,CAACK,UAAP,EAAb;;AACA,UAAI6C,OAAO,KAAK,CAAhB,EAAmB;AACjBiC,aAAK,CAACxF,SAAN,CAAiBM,MAAM,GAAG,CAA1B,EAA8B,uCAA9B;AACAA,cAAM,GAAGD,MAAM,CAACK,UAAP,EAAT;AACD;;AAED,UAAIsG,MAAM,GAAG,KAAb,CAhCqC,CAiCrC;;AACA,UAAK,OAAOe,QAAP,KAAoB,WAArB,IAAsCe,aAAa,CAAC,CAAD,CAAb,KAAqBf,QAA/D,EAA0E;AACxET,kBAAU,IAAIyB,OAAd;AACA/B,cAAM,GAAG,IAAT;AACD;;AACDH,eAAS,CAAC+B,CAAD,CAAT,GAAe;AACbjI,YAAI,EAAEA,IADO;AAEbsF,kBAAU,EAAE6C,aAFC;AAGbN,kBAHa;AAIbrE,YAAI,EAAER,KAAK,CAACO,OAAN,CAAcC,IAAd,CAJO;AAKbK,YAAI,EAAEuE,OALO;AAMbzI,cANa;AAOb0G;AAPa,OAAf;AASD;AACF;;AAED,SAAO;AACLH,aAAS,EAAEA,SADN;AAELS,cAAU,EAAEA;AAFP,GAAP;AAID;;AAEDzG,MAAM,CAACC,OAAP,GAAiBiF,MAAjB,C;;;;;;;AClOa;;AAEb,SAAS7D,QAAT,GAAoB;AAClB,MAAI8G,MAAM,GAAG,EAAb;AAEAA,QAAM,CAACrH,IAAP,CAAY,YAAZ;;AACA,OAAK,IAAIsH,SAAT,IAAsB,KAAKhD,UAA3B,EAAuC;AACrC+C,UAAM,CAACrH,IAAP,aAAiBsH,SAAS,CAACtI,IAAV,CAAeuI,MAAf,CAAsB,EAAtB,CAAjB,sBAAsDD,SAAS,CAACzE,IAAhE;AACD;;AAEDwE,QAAM,CAACrH,IAAP,CAAY,EAAZ;AACAqH,QAAM,CAACrH,IAAP,CAAY,mBAAZ;;AACA,OAAK,IAAI0E,SAAT,IAAsB,KAAKH,gBAA3B,EAA6C;AAC3C8C,UAAM,CAACrH,IAAP,aAAiB0E,SAAS,CAAC1F,IAAV,CAAeuI,MAAf,CAAsB,EAAtB,CAAjB,gBAAgD7C,SAAS,CAAC7E,KAA1D;AACD;;AAED,MAAIqF,SAAS,GAAGsC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKxC,SAApB,CAAX,CAAhB;AACAmC,QAAM,CAACrH,IAAP,CAAY,EAAZ;AACAqH,QAAM,CAACrH,IAAP,CAAY,YAAZ;;AACA,OAAK,IAAI+E,QAAT,IAAqBG,SAArB,EAAgC;AAC9BH,YAAQ,CAAClF,KAAT,GAAiB,KAAKmF,eAAL,CAAqBD,QAArB,CAAjB;AACA,QAAI2C,SAAS,GAAGF,IAAI,CAACE,SAAL,CAAe3C,QAAQ,CAAClF,KAAxB,CAAhB;AACA,QAAI6H,SAAS,CAAC9H,MAAV,GAAmB,EAAvB,EAA2B8H,SAAS,GAAGA,SAAS,CAAC/D,SAAV,CAAoB,CAApB,EAAuB,EAAvB,CAAZ;;AAC3B,QAAI,CAACgE,KAAK,CAAC5C,QAAQ,CAAClF,KAAT,CAAeD,MAAhB,CAAV,EAAmC;AACjC8H,eAAS,wBAAiB3C,QAAQ,CAAClF,KAAT,CAAeD,MAAhC,MAAT;AACD;;AACDyH,UAAM,CAACrH,IAAP,aAAiB+E,QAAQ,CAAC/F,IAAT,CAAcuI,MAAd,CAAqB,EAArB,CAAjB,gBAA+CG,SAA/C;AACD;;AACD,SAAOL,MAAM,CAACpC,IAAP,CAAY,IAAZ,CAAP;AACD;;AAED/F,MAAM,CAACC,OAAP,GAAiBoB,QAAjB,C","file":"netcdfjs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"netcdfjs\"] = factory();\n\telse\n\t\troot[\"netcdfjs\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","'use strict';\n\n/**\n * Throws a non-valid NetCDF exception if the statement it's true\n * @ignore\n * @param {boolean} statement - Throws if true\n * @param {string} reason - Reason to throw\n */\nfunction notNetcdf(statement, reason) {\n  if (statement) {\n    throw new TypeError(`Not a valid NetCDF v3.x file: ${reason}`);\n  }\n}\n\n/**\n * Moves 1, 2, or 3 bytes to next 4-byte boundary\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n */\nfunction padding(buffer) {\n  if ((buffer.offset % 4) !== 0) {\n    buffer.skip(4 - (buffer.offset % 4));\n  }\n}\n\n\n/**\n * Reads the name\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @return {string} - Name\n */\nfunction readName(buffer) {\n  // Read name\n  var nameLength = buffer.readUint32();\n  var name = buffer.readChars(nameLength);\n\n  // validate name\n  // TODO\n\n  // Apply padding\n  padding(buffer);\n  return name;\n}\n\nmodule.exports.notNetcdf = notNetcdf;\nmodule.exports.padding = padding;\nmodule.exports.readName = readName;\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","'use strict';\n\nconst notNetcdf = require('./utils').notNetcdf;\n\nconst types = {\n  BYTE: 1,\n  CHAR: 2,\n  SHORT: 3,\n  INT: 4,\n  FLOAT: 5,\n  DOUBLE: 6\n};\n\n/**\n * Parse a number into their respective type\n * @ignore\n * @param {number} type - integer that represents the type\n * @return {string} - parsed value of the type\n */\nfunction num2str(type) {\n  switch (Number(type)) {\n    case types.BYTE:\n      return 'byte';\n    case types.CHAR:\n      return 'char';\n    case types.SHORT:\n      return 'short';\n    case types.INT:\n      return 'int';\n    case types.FLOAT:\n      return 'float';\n    case types.DOUBLE:\n      return 'double';\n      /* istanbul ignore next */\n    default:\n      return 'undefined';\n  }\n}\n\n/**\n * Parse a number type identifier to his size in bytes\n * @ignore\n * @param {number} type - integer that represents the type\n * @return {number} -size of the type\n */\nfunction num2bytes(type) {\n  switch (Number(type)) {\n    case types.BYTE:\n      return 1;\n    case types.CHAR:\n      return 1;\n    case types.SHORT:\n      return 2;\n    case types.INT:\n      return 4;\n    case types.FLOAT:\n      return 4;\n    case types.DOUBLE:\n      return 8;\n      /* istanbul ignore next */\n    default:\n      return -1;\n  }\n}\n\n/**\n * Reverse search of num2str\n * @ignore\n * @param {string} type - string that represents the type\n * @return {number} - parsed value of the type\n */\nfunction str2num(type) {\n  switch (String(type)) {\n    case 'byte':\n      return types.BYTE;\n    case 'char':\n      return types.CHAR;\n    case 'short':\n      return types.SHORT;\n    case 'int':\n      return types.INT;\n    case 'float':\n      return types.FLOAT;\n    case 'double':\n      return types.DOUBLE;\n      /* istanbul ignore next */\n    default:\n      return -1;\n  }\n}\n\n/**\n * Auxiliary function to read numeric data\n * @ignore\n * @param {number} size - Size of the element to read\n * @param {function} bufferReader - Function to read next value\n * @return {Array<number>|number}\n */\nfunction readNumber(size, bufferReader) {\n  if (size !== 1) {\n    var numbers = new Array(size);\n    for (var i = 0; i < size; i++) {\n      numbers[i] = bufferReader();\n    }\n    return numbers;\n  } else {\n    return bufferReader();\n  }\n}\n\n/**\n * Given a type and a size reads the next element\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @param {number} type - Type of the data to read\n * @param {number} size - Size of the element to read\n * @return {string|Array<number>|number}\n */\nfunction readType(buffer, type, size) {\n  switch (type) {\n    case types.BYTE:\n      return buffer.readBytes(size);\n    case types.CHAR:\n      return trimNull(buffer.readChars(size));\n    case types.SHORT:\n      return readNumber(size, buffer.readInt16.bind(buffer));\n    case types.INT:\n      return readNumber(size, buffer.readInt32.bind(buffer));\n    case types.FLOAT:\n      return readNumber(size, buffer.readFloat32.bind(buffer));\n    case types.DOUBLE:\n      return readNumber(size, buffer.readFloat64.bind(buffer));\n      /* istanbul ignore next */\n    default:\n      notNetcdf(true, `non valid type ${type}`);\n      return undefined;\n  }\n}\n\n/**\n * Removes null terminate value\n * @ignore\n * @param {string} value - String to trim\n * @return {string} - Trimmed string\n */\nfunction trimNull(value) {\n  if (value.charCodeAt(value.length - 1) === 0) {\n    return value.substring(0, value.length - 1);\n  }\n  return value;\n}\n\nmodule.exports = types;\nmodule.exports.num2str = num2str;\nmodule.exports.num2bytes = num2bytes;\nmodule.exports.str2num = str2num;\nmodule.exports.readType = readType;\n","'use strict';\n\nconst { IOBuffer } = require('iobuffer');\n\nconst utils = require('./utils');\nconst data = require('./data');\nconst readHeader = require('./header');\nconst toString = require('./toString');\n\n/**\n * Reads a NetCDF v3.x file\n * https://www.unidata.ucar.edu/software/netcdf/docs/file_format_specifications.html\n * @param {ArrayBuffer} data - ArrayBuffer or any Typed Array (including Node.js' Buffer from v4) with the data\n * @constructor\n */\nclass NetCDFReader {\n  constructor(data) {\n    const buffer = new IOBuffer(data);\n    buffer.setBigEndian();\n\n    // Validate that it's a NetCDF file\n    utils.notNetcdf(buffer.readChars(3) !== 'CDF', 'should start with CDF');\n\n    // Check the NetCDF format\n    const version = buffer.readByte();\n    utils.notNetcdf(version > 2, 'unknown version');\n\n    // Read the header\n    this.header = readHeader(buffer, version);\n    this.buffer = buffer;\n  }\n\n  /**\n   * @return {string} - Version for the NetCDF format\n   */\n  get version() {\n    if (this.header.version === 1) {\n      return 'classic format';\n    } else {\n      return '64-bit offset format';\n    }\n  }\n\n  /**\n   * @return {object} - Metadata for the record dimension\n   *  * `length`: Number of elements in the record dimension\n   *  * `id`: Id number in the list of dimensions for the record dimension\n   *  * `name`: String with the name of the record dimension\n   *  * `recordStep`: Number with the record variables step size\n   */\n  get recordDimension() {\n    return this.header.recordDimension;\n  }\n\n  /**\n   * @return {Array<object>} - List of dimensions with:\n   *  * `name`: String with the name of the dimension\n   *  * `size`: Number with the size of the dimension\n   */\n  get dimensions() {\n    return this.header.dimensions;\n  }\n\n  /**\n   * @return {Array<object>} - List of global attributes with:\n   *  * `name`: String with the name of the attribute\n   *  * `type`: String with the type of the attribute\n   *  * `value`: A number or string with the value of the attribute\n   */\n  get globalAttributes() {\n    return this.header.globalAttributes;\n  }\n\n  /**\n   * Returns the value of an attribute\n   * @param {string} attributeName\n   * @return {string} Value of the attributeName or null\n   */\n  getAttribute(attributeName) {\n    const attribute = this.globalAttributes.find(\n      (val) => val.name === attributeName\n    );\n    if (attribute) return attribute.value;\n    return null;\n  }\n\n  /**\n   * Returns the value of a variable as a string\n   * @param {string} variableName\n   * @return {string} Value of the variable as a string or null\n   */\n  getDataVariableAsString(variableName) {\n    const variable = this.getDataVariable(variableName);\n    if (variable) return variable.join('');\n    return null;\n  }\n\n  /**\n   * @return {Array<object>} - List of variables with:\n   *  * `name`: String with the name of the variable\n   *  * `dimensions`: Array with the dimension IDs of the variable\n   *  * `attributes`: Array with the attributes of the variable\n   *  * `type`: String with the type of the variable\n   *  * `size`: Number with the size of the variable\n   *  * `offset`: Number with the offset where of the variable begins\n   *  * `record`: True if is a record variable, false otherwise\n   */\n  get variables() {\n    return this.header.variables;\n  }\n\n  toString() {\n    return toString.call(this);\n  }\n\n  /**\n   * Retrieves the data for a given variable\n   * @param {string|object} variableName - Name of the variable to search or variable object\n   * @return {Array} - List with the variable values\n   */\n  getDataVariable(variableName) {\n    let variable;\n    if (typeof variableName === 'string') {\n      // search the variable\n      variable = this.header.variables.find(function (val) {\n        return val.name === variableName;\n      });\n    } else {\n      variable = variableName;\n    }\n\n    // throws if variable not found\n    utils.notNetcdf(\n      variable === undefined,\n      `variable not found: ${variableName}`\n    );\n\n    // go to the offset position\n    this.buffer.seek(variable.offset);\n\n    if (variable.record) {\n      // record variable case\n      return data.record(this.buffer, variable, this.header.recordDimension);\n    } else {\n      // non-record variable case\n      return data.nonRecord(this.buffer, variable);\n    }\n  }\n\n  /**\n   * Check if a dataVariable exists\n   * @param {string} variableName - Name of the variable to find\n   * @return {boolean}\n   */\n  dataVariableExists(variableName) {\n    const variable = this.header.variables.find(function (val) {\n      return val.name === variableName;\n    });\n    return variable !== undefined;\n  }\n\n  /**\n   * Check if an attribute exists\n   * @param {string} attributeName - Name of the attribute to find\n   * @return {boolean}\n   */\n  attributeExists(attributeName) {\n    const attribute = this.globalAttributes.find(\n      (val) => val.name === attributeName\n    );\n    return attribute !== undefined;\n  }\n}\n\nmodule.exports = NetCDFReader;\n","import { decode, encode } from 'utf8';\nconst defaultByteLength = 1024 * 8;\nexport class IOBuffer {\n    /**\n     * @param data - The data to construct the IOBuffer with.\n     * If data is a number, it will be the new buffer's length<br>\n     * If data is `undefined`, the buffer will be initialized with a default length of 8Kb<br>\n     * If data is an ArrayBuffer, SharedArrayBuffer, an ArrayBufferView (Typed Array), an IOBuffer instance,\n     * or a Node.js Buffer, a view will be created over the underlying ArrayBuffer.\n     * @param options\n     */\n    constructor(data = defaultByteLength, options = {}) {\n        let dataIsGiven = false;\n        if (typeof data === 'number') {\n            data = new ArrayBuffer(data);\n        }\n        else {\n            dataIsGiven = true;\n            this.lastWrittenByte = data.byteLength;\n        }\n        const offset = options.offset ? options.offset >>> 0 : 0;\n        const byteLength = data.byteLength - offset;\n        let dvOffset = offset;\n        if (ArrayBuffer.isView(data) || data instanceof IOBuffer) {\n            if (data.byteLength !== data.buffer.byteLength) {\n                dvOffset = data.byteOffset + offset;\n            }\n            data = data.buffer;\n        }\n        if (dataIsGiven) {\n            this.lastWrittenByte = byteLength;\n        }\n        else {\n            this.lastWrittenByte = 0;\n        }\n        this.buffer = data;\n        this.length = byteLength;\n        this.byteLength = byteLength;\n        this.byteOffset = dvOffset;\n        this.offset = 0;\n        this.littleEndian = true;\n        this._data = new DataView(this.buffer, dvOffset, byteLength);\n        this._mark = 0;\n        this._marks = [];\n    }\n    /**\n     * Checks if the memory allocated to the buffer is sufficient to store more\n     * bytes after the offset.\n     * @param byteLength - The needed memory in bytes.\n     * @returns `true` if there is sufficient space and `false` otherwise.\n     */\n    available(byteLength = 1) {\n        return this.offset + byteLength <= this.length;\n    }\n    /**\n     * Check if little-endian mode is used for reading and writing multi-byte\n     * values.\n     * @returns `true` if little-endian mode is used, `false` otherwise.\n     */\n    isLittleEndian() {\n        return this.littleEndian;\n    }\n    /**\n     * Set little-endian mode for reading and writing multi-byte values.\n     */\n    setLittleEndian() {\n        this.littleEndian = true;\n        return this;\n    }\n    /**\n     * Check if big-endian mode is used for reading and writing multi-byte values.\n     * @returns `true` if big-endian mode is used, `false` otherwise.\n     */\n    isBigEndian() {\n        return !this.littleEndian;\n    }\n    /**\n     * Switches to big-endian mode for reading and writing multi-byte values.\n     */\n    setBigEndian() {\n        this.littleEndian = false;\n        return this;\n    }\n    /**\n     * Move the pointer n bytes forward.\n     * @param n - Number of bytes to skip.\n     */\n    skip(n = 1) {\n        this.offset += n;\n        return this;\n    }\n    /**\n     * Move the pointer to the given offset.\n     * @param offset\n     */\n    seek(offset) {\n        this.offset = offset;\n        return this;\n    }\n    /**\n     * Store the current pointer offset.\n     * @see {@link IOBuffer#reset}\n     */\n    mark() {\n        this._mark = this.offset;\n        return this;\n    }\n    /**\n     * Move the pointer back to the last pointer offset set by mark.\n     * @see {@link IOBuffer#mark}\n     */\n    reset() {\n        this.offset = this._mark;\n        return this;\n    }\n    /**\n     * Push the current pointer offset to the mark stack.\n     * @see {@link IOBuffer#popMark}\n     */\n    pushMark() {\n        this._marks.push(this.offset);\n        return this;\n    }\n    /**\n     * Pop the last pointer offset from the mark stack, and set the current\n     * pointer offset to the popped value.\n     * @see {@link IOBuffer#pushMark}\n     */\n    popMark() {\n        const offset = this._marks.pop();\n        if (offset === undefined) {\n            throw new Error('Mark stack empty');\n        }\n        this.seek(offset);\n        return this;\n    }\n    /**\n     * Move the pointer offset back to 0.\n     */\n    rewind() {\n        this.offset = 0;\n        return this;\n    }\n    /**\n     * Make sure the buffer has sufficient memory to write a given byteLength at\n     * the current pointer offset.\n     * If the buffer's memory is insufficient, this method will create a new\n     * buffer (a copy) with a length that is twice (byteLength + current offset).\n     * @param byteLength\n     */\n    ensureAvailable(byteLength = 1) {\n        if (!this.available(byteLength)) {\n            const lengthNeeded = this.offset + byteLength;\n            const newLength = lengthNeeded * 2;\n            const newArray = new Uint8Array(newLength);\n            newArray.set(new Uint8Array(this.buffer));\n            this.buffer = newArray.buffer;\n            this.length = this.byteLength = newLength;\n            this._data = new DataView(this.buffer);\n        }\n        return this;\n    }\n    /**\n     * Read a byte and return false if the byte's value is 0, or true otherwise.\n     * Moves pointer forward by one byte.\n     */\n    readBoolean() {\n        return this.readUint8() !== 0;\n    }\n    /**\n     * Read a signed 8-bit integer and move pointer forward by 1 byte.\n     */\n    readInt8() {\n        return this._data.getInt8(this.offset++);\n    }\n    /**\n     * Read an unsigned 8-bit integer and move pointer forward by 1 byte.\n     */\n    readUint8() {\n        return this._data.getUint8(this.offset++);\n    }\n    /**\n     * Alias for {@link IOBuffer#readUint8}.\n     */\n    readByte() {\n        return this.readUint8();\n    }\n    /**\n     * Read `n` bytes and move pointer forward by `n` bytes.\n     */\n    readBytes(n = 1) {\n        const bytes = new Uint8Array(n);\n        for (let i = 0; i < n; i++) {\n            bytes[i] = this.readByte();\n        }\n        return bytes;\n    }\n    /**\n     * Read a 16-bit signed integer and move pointer forward by 2 bytes.\n     */\n    readInt16() {\n        const value = this._data.getInt16(this.offset, this.littleEndian);\n        this.offset += 2;\n        return value;\n    }\n    /**\n     * Read a 16-bit unsigned integer and move pointer forward by 2 bytes.\n     */\n    readUint16() {\n        const value = this._data.getUint16(this.offset, this.littleEndian);\n        this.offset += 2;\n        return value;\n    }\n    /**\n     * Read a 32-bit signed integer and move pointer forward by 4 bytes.\n     */\n    readInt32() {\n        const value = this._data.getInt32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n    }\n    /**\n     * Read a 32-bit unsigned integer and move pointer forward by 4 bytes.\n     */\n    readUint32() {\n        const value = this._data.getUint32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n    }\n    /**\n     * Read a 32-bit floating number and move pointer forward by 4 bytes.\n     */\n    readFloat32() {\n        const value = this._data.getFloat32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n    }\n    /**\n     * Read a 64-bit floating number and move pointer forward by 8 bytes.\n     */\n    readFloat64() {\n        const value = this._data.getFloat64(this.offset, this.littleEndian);\n        this.offset += 8;\n        return value;\n    }\n    /**\n     * Read a 1-byte ASCII character and move pointer forward by 1 byte.\n     */\n    readChar() {\n        return String.fromCharCode(this.readInt8());\n    }\n    /**\n     * Read `n` 1-byte ASCII characters and move pointer forward by `n` bytes.\n     */\n    readChars(n = 1) {\n        let result = '';\n        for (let i = 0; i < n; i++) {\n            result += this.readChar();\n        }\n        return result;\n    }\n    /**\n     * Read the next `n` bytes, return a UTF-8 decoded string and move pointer\n     * forward by `n` bytes.\n     */\n    readUtf8(n = 1) {\n        const bString = this.readChars(n);\n        return decode(bString);\n    }\n    /**\n     * Write 0xff if the passed value is truthy, 0x00 otherwise and move pointer\n     * forward by 1 byte.\n     */\n    writeBoolean(value) {\n        this.writeUint8(value ? 0xff : 0x00);\n        return this;\n    }\n    /**\n     * Write `value` as an 8-bit signed integer and move pointer forward by 1 byte.\n     */\n    writeInt8(value) {\n        this.ensureAvailable(1);\n        this._data.setInt8(this.offset++, value);\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as an 8-bit unsigned integer and move pointer forward by 1\n     * byte.\n     */\n    writeUint8(value) {\n        this.ensureAvailable(1);\n        this._data.setUint8(this.offset++, value);\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * An alias for {@link IOBuffer#writeUint8}.\n     */\n    writeByte(value) {\n        return this.writeUint8(value);\n    }\n    /**\n     * Write all elements of `bytes` as uint8 values and move pointer forward by\n     * `bytes.length` bytes.\n     */\n    writeBytes(bytes) {\n        this.ensureAvailable(bytes.length);\n        for (let i = 0; i < bytes.length; i++) {\n            this._data.setUint8(this.offset++, bytes[i]);\n        }\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 16-bit signed integer and move pointer forward by 2\n     * bytes.\n     */\n    writeInt16(value) {\n        this.ensureAvailable(2);\n        this._data.setInt16(this.offset, value, this.littleEndian);\n        this.offset += 2;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 16-bit unsigned integer and move pointer forward by 2\n     * bytes.\n     */\n    writeUint16(value) {\n        this.ensureAvailable(2);\n        this._data.setUint16(this.offset, value, this.littleEndian);\n        this.offset += 2;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 32-bit signed integer and move pointer forward by 4\n     * bytes.\n     */\n    writeInt32(value) {\n        this.ensureAvailable(4);\n        this._data.setInt32(this.offset, value, this.littleEndian);\n        this.offset += 4;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 32-bit unsigned integer and move pointer forward by 4\n     * bytes.\n     */\n    writeUint32(value) {\n        this.ensureAvailable(4);\n        this._data.setUint32(this.offset, value, this.littleEndian);\n        this.offset += 4;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 32-bit floating number and move pointer forward by 4\n     * bytes.\n     */\n    writeFloat32(value) {\n        this.ensureAvailable(4);\n        this._data.setFloat32(this.offset, value, this.littleEndian);\n        this.offset += 4;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 64-bit floating number and move pointer forward by 8\n     * bytes.\n     */\n    writeFloat64(value) {\n        this.ensureAvailable(8);\n        this._data.setFloat64(this.offset, value, this.littleEndian);\n        this.offset += 8;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write the charCode of `str`'s first character as an 8-bit unsigned integer\n     * and move pointer forward by 1 byte.\n     */\n    writeChar(str) {\n        return this.writeUint8(str.charCodeAt(0));\n    }\n    /**\n     * Write the charCodes of all `str`'s characters as 8-bit unsigned integers\n     * and move pointer forward by `str.length` bytes.\n     */\n    writeChars(str) {\n        for (let i = 0; i < str.length; i++) {\n            this.writeUint8(str.charCodeAt(i));\n        }\n        return this;\n    }\n    /**\n     * UTF-8 encode and write `str` to the current pointer offset and move pointer\n     * forward according to the encoded length.\n     */\n    writeUtf8(str) {\n        const bString = encode(str);\n        return this.writeChars(bString);\n    }\n    /**\n     * Export a Uint8Array view of the internal buffer.\n     * The view starts at the byte offset and its length\n     * is calculated to stop at the last written byte or the original length.\n     */\n    toArray() {\n        return new Uint8Array(this.buffer, this.byteOffset, this.lastWrittenByte);\n    }\n    /**\n     * Update the last written byte offset\n     * @private\n     */\n    _updateLastWrittenByte() {\n        if (this.offset > this.lastWrittenByte) {\n            this.lastWrittenByte = this.offset;\n        }\n    }\n}\n//# sourceMappingURL=IOBuffer.js.map","'use strict';\n\nconst types = require('./types');\n\n// const STREAMING = 4294967295;\n\n/**\n * Read data for the given non-record variable\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @param {object} variable - Variable metadata\n * @return {Array} - Data of the element\n */\nfunction nonRecord(buffer, variable) {\n  // variable type\n  const type = types.str2num(variable.type);\n\n  // size of the data\n  var size = variable.size / types.num2bytes(type);\n\n  // iterates over the data\n  var data = new Array(size);\n  for (var i = 0; i < size; i++) {\n    data[i] = types.readType(buffer, type, 1);\n  }\n\n  return data;\n}\n\n/**\n * Read data for the given record variable\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @param {object} variable - Variable metadata\n * @param {object} recordDimension - Record dimension metadata\n * @return {Array} - Data of the element\n */\nfunction record(buffer, variable, recordDimension) {\n  // variable type\n  const type = types.str2num(variable.type);\n  const width = variable.size ? variable.size / types.num2bytes(type) : 1;\n\n  // size of the data\n  // TODO streaming data\n  var size = recordDimension.length;\n\n  // iterates over the data\n  var data = new Array(size);\n  const step = recordDimension.recordStep;\n\n  for (var i = 0; i < size; i++) {\n    var currentOffset = buffer.offset;\n    data[i] = types.readType(buffer, type, width);\n    buffer.seek(currentOffset + step);\n  }\n\n  return data;\n}\n\nmodule.exports.nonRecord = nonRecord;\nmodule.exports.record = record;\n","'use strict';\n\nconst utils = require('./utils');\nconst types = require('./types');\n\n// Grammar constants\nconst ZERO = 0;\nconst NC_DIMENSION = 10;\nconst NC_VARIABLE = 11;\nconst NC_ATTRIBUTE = 12;\n\n/**\n * Read the header of the file\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @param {number} version - Version of the file\n * @return {object} - Object with the fields:\n *  * `recordDimension`: Number with the length of record dimension\n *  * `dimensions`: List of dimensions\n *  * `globalAttributes`: List of global attributes\n *  * `variables`: List of variables\n */\nfunction header(buffer, version) {\n  // Length of record dimension\n  // sum of the varSize's of all the record variables.\n  var header = { recordDimension: { length: buffer.readUint32() } };\n\n  // Version\n  header.version = version;\n\n  // List of dimensions\n  var dimList = dimensionsList(buffer);\n  header.recordDimension.id = dimList.recordId; // id of the unlimited dimension\n  header.recordDimension.name = dimList.recordName; // name of the unlimited dimension\n  header.dimensions = dimList.dimensions;\n\n  // List of global attributes\n  header.globalAttributes = attributesList(buffer);\n\n  // List of variables\n  var variables = variablesList(buffer, dimList.recordId, version);\n  header.variables = variables.variables;\n  header.recordDimension.recordStep = variables.recordStep;\n\n  return header;\n}\n\nconst NC_UNLIMITED = 0;\n\n/**\n * List of dimensions\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @return {object} - Ojbect containing the following properties:\n *  * `dimensions` that is an array of dimension object:\n  *  * `name`: String with the name of the dimension\n  *  * `size`: Number with the size of the dimension dimensions: dimensions\n *  * `recordId`: the id of the dimension that has unlimited size or undefined,\n *  * `recordName`: name of the dimension that has unlimited size\n */\nfunction dimensionsList(buffer) {\n  var recordId, recordName;\n  const dimList = buffer.readUint32();\n  if (dimList === ZERO) {\n    utils.notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of dimensions');\n    return [];\n  } else {\n    utils.notNetcdf((dimList !== NC_DIMENSION), 'wrong tag for list of dimensions');\n\n    // Length of dimensions\n    const dimensionSize = buffer.readUint32();\n    var dimensions = new Array(dimensionSize);\n    for (var dim = 0; dim < dimensionSize; dim++) {\n      // Read name\n      var name = utils.readName(buffer);\n\n      // Read dimension size\n      const size = buffer.readUint32();\n      if (size === NC_UNLIMITED) { // in netcdf 3 one field can be of size unlimmited\n        recordId = dim;\n        recordName = name;\n      }\n\n      dimensions[dim] = {\n        name: name,\n        size: size\n      };\n    }\n  }\n  return {\n    dimensions: dimensions,\n    recordId: recordId,\n    recordName: recordName\n  };\n}\n\n/**\n * List of attributes\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @return {Array<object>} - List of attributes with:\n *  * `name`: String with the name of the attribute\n *  * `type`: String with the type of the attribute\n *  * `value`: A number or string with the value of the attribute\n */\nfunction attributesList(buffer) {\n  const gAttList = buffer.readUint32();\n  if (gAttList === ZERO) {\n    utils.notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of attributes');\n    return [];\n  } else {\n    utils.notNetcdf((gAttList !== NC_ATTRIBUTE), 'wrong tag for list of attributes');\n\n    // Length of attributes\n    const attributeSize = buffer.readUint32();\n    var attributes = new Array(attributeSize);\n    for (var gAtt = 0; gAtt < attributeSize; gAtt++) {\n      // Read name\n      var name = utils.readName(buffer);\n\n      // Read type\n      var type = buffer.readUint32();\n      utils.notNetcdf(((type < 1) || (type > 6)), `non valid type ${type}`);\n\n      // Read attribute\n      var size = buffer.readUint32();\n      var value = types.readType(buffer, type, size);\n\n      // Apply padding\n      utils.padding(buffer);\n\n      attributes[gAtt] = {\n        name: name,\n        type: types.num2str(type),\n        value: value\n      };\n    }\n  }\n  return attributes;\n}\n\n/**\n * List of variables\n * @ignore\n * @param {IOBuffer} buffer - Buffer for the file data\n * @param {number} recordId - Id of the unlimited dimension (also called record dimension)\n *                            This value may be undefined if there is no unlimited dimension\n * @param {number} version - Version of the file\n * @return {object} - Number of recordStep and list of variables with:\n *  * `name`: String with the name of the variable\n *  * `dimensions`: Array with the dimension IDs of the variable\n *  * `attributes`: Array with the attributes of the variable\n *  * `type`: String with the type of the variable\n *  * `size`: Number with the size of the variable\n *  * `offset`: Number with the offset where of the variable begins\n *  * `record`: True if is a record variable, false otherwise (unlimited size)\n */\n\nfunction variablesList(buffer, recordId, version) {\n  const varList = buffer.readUint32();\n  var recordStep = 0;\n  if (varList === ZERO) {\n    utils.notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of variables');\n    return [];\n  } else {\n    utils.notNetcdf((varList !== NC_VARIABLE), 'wrong tag for list of variables');\n\n    // Length of variables\n    const variableSize = buffer.readUint32();\n    var variables = new Array(variableSize);\n    for (var v = 0; v < variableSize; v++) {\n      // Read name\n      var name = utils.readName(buffer);\n\n      // Read dimensionality of the variable\n      const dimensionality = buffer.readUint32();\n\n      // Index into the list of dimensions\n      var dimensionsIds = new Array(dimensionality);\n      for (var dim = 0; dim < dimensionality; dim++) {\n        dimensionsIds[dim] = buffer.readUint32();\n      }\n\n      // Read variables size\n      var attributes = attributesList(buffer);\n\n      // Read type\n      var type = buffer.readUint32();\n      utils.notNetcdf(((type < 1) && (type > 6)), `non valid type ${type}`);\n\n      // Read variable size\n      // The 32-bit varSize field is not large enough to contain the size of variables that require\n      // more than 2^32 - 4 bytes, so 2^32 - 1 is used in the varSize field for such variables.\n      const varSize = buffer.readUint32();\n\n      // Read offset\n      var offset = buffer.readUint32();\n      if (version === 2) {\n        utils.notNetcdf((offset > 0), 'offsets larger than 4GB not supported');\n        offset = buffer.readUint32();\n      }\n\n      let record = false;\n      // Count amount of record variables\n      if ((typeof recordId !== 'undefined') && (dimensionsIds[0] === recordId)) {\n        recordStep += varSize;\n        record = true;\n      }\n      variables[v] = {\n        name: name,\n        dimensions: dimensionsIds,\n        attributes,\n        type: types.num2str(type),\n        size: varSize,\n        offset,\n        record\n      };\n    }\n  }\n\n  return {\n    variables: variables,\n    recordStep: recordStep\n  };\n}\n\nmodule.exports = header;\n","'use strict';\n\nfunction toString() {\n  let result = [];\n\n  result.push('DIMENSIONS');\n  for (let dimension of this.dimensions) {\n    result.push(`  ${dimension.name.padEnd(30)} = size: ${dimension.size}`);\n  }\n\n  result.push('');\n  result.push('GLOBAL ATTRIBUTES');\n  for (let attribute of this.globalAttributes) {\n    result.push(`  ${attribute.name.padEnd(30)} = ${attribute.value}`);\n  }\n\n  let variables = JSON.parse(JSON.stringify(this.variables));\n  result.push('');\n  result.push('VARIABLES:');\n  for (let variable of variables) {\n    variable.value = this.getDataVariable(variable);\n    let stringify = JSON.stringify(variable.value);\n    if (stringify.length > 50) stringify = stringify.substring(0, 50);\n    if (!isNaN(variable.value.length)) {\n      stringify += ` (length: ${variable.value.length})`;\n    }\n    result.push(`  ${variable.name.padEnd(30)} = ${stringify}`);\n  }\n  return result.join('\\n');\n}\n\nmodule.exports = toString;\n"],"sourceRoot":""}